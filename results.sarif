{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Trivy: Vulnerability Scanner for Containers",
          "rules": [
            {
              "id": "[MEDIUM] CVE-2017-16137",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package debugnodejs-debug: Regular expression Denial of Service."
              },
              "fullDescription": {
                "text": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue."
              },
              "properties": {
                "tags": [
                  "debug"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[HIGH] CVE-2017-1000228",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package ejsHigh severity vulnerability that affects ejs."
              },
              "fullDescription": {
                "text": "nodejs ejs versions older than 2.5.3 is vulnerable to remote code execution due to weak input validation in ejs.renderFile() function."
              },
              "properties": {
                "tags": [
                  "ejs"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[MEDIUM] CVE-2017-1000188",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package ejsnodejs-ejs: Cross-site scripting via ejs.renderFile()."
              },
              "fullDescription": {
                "text": "nodejs ejs version older than 2.5.5 is vulnerable to a Cross-site-scripting in the ejs.renderFile() resulting in code injection."
              },
              "properties": {
                "tags": [
                  "ejs"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[MEDIUM] CVE-2017-1000189",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package ejsnodejs-ejs: Denial of Service via renderFile() by overriding localNames."
              },
              "fullDescription": {
                "text": "nodejs ejs version older than 2.5.5 is vulnerable to a denial-of-service due to weak input validation in the ejs.renderFile()."
              },
              "properties": {
                "tags": [
                  "ejs"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[MEDIUM] CVE-2017-16119",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package freshnodejs-fresh: Regular expression denial of service when parsing crafted user input."
              },
              "fullDescription": {
                "text": "Fresh is a module used by the Express.js framework for HTTP response freshness testing. It is vulnerable to a regular expression denial of service when it is passed specially crafted input to parse. This causes the event loop to be blocked causing a denial of service condition."
              },
              "properties": {
                "tags": [
                  "fresh"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[MEDIUM] CVE-2017-16138",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package mimenodejs-mime: Regular expression Denial of Service."
              },
              "fullDescription": {
                "text": "The mime module < 1.4.1, 2.0.1, 2.0.2 is vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input."
              },
              "properties": {
                "tags": [
                  "mime"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[HIGH] CVE-2019-5413",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package morgannodejs-morgan: Unescaped input in compile() function."
              },
              "fullDescription": {
                "text": "An attacker can use the format parameter to inject arbitrary commands in the npm package morgan < 1.9.1."
              },
              "properties": {
                "tags": [
                  "morgan"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[MEDIUM] NSWG-ECO-473",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package morganArbitrary Code Injection."
              },
              "fullDescription": {
                "text": "Code Injection Vulnerability in morgan Package."
              },
              "properties": {
                "tags": [
                  "morgan"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[HIGH] NSWG-ECO-106",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package negotiatorRegular Expression Denial of Service."
              },
              "fullDescription": {
                "text": "negotiator is an HTTP content negotiator for Node.js and is used by many modules and frameworks including Express and Koa.\n\nThe header for \"Accept-Language\", when parsed by negotiator is vulnerable to Regular Expression Denial of Service via a specially crafted string. \n\nTimeline\n\n- April 29th 2016 - Initial report to maintainers\n- April 29th 2016 - Confirm receipt from maintainers\n- May 1st 2016 - Fix confirmed\n- May 5th 2016 - 0.6.1 published with fix\n- June 16th 2016 - Advisory published (delay was to coordinate fixes in upstream frameworks, Koa and Express)."
              },
              "properties": {
                "tags": [
                  "negotiator"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[MEDIUM] CVE-2016-10539",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package negotiatorHigh severity vulnerability that affects negotiator."
              },
              "fullDescription": {
                "text": "negotiator is an HTTP content negotiator for Node.js and is used by many modules and frameworks including Express and Koa. The header for \"Accept-Language\", when parsed by negotiator 0.6.0 and earlier is vulnerable to Regular Expression Denial of Service via a specially crafted string."
              },
              "properties": {
                "tags": [
                  "negotiator"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[HIGH] CVE-2017-16082",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package pgHigh severity vulnerability that affects pg."
              },
              "fullDescription": {
                "text": "A remote code execution vulnerability was found within the pg module when the remote database or query specifies a specially crafted column name. There are 2 likely scenarios in which one would likely be vulnerable. 1) Executing unsafe, user-supplied sql which contains a malicious column name. 2) Connecting to an untrusted database and executing a query which returns results where any of the column names are malicious."
              },
              "properties": {
                "tags": [
                  "pg"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[MEDIUM] CVE-2017-1000048",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package qsnodejs-qs: Prototype override protection bypass."
              },
              "fullDescription": {
                "text": "the web framework using ljharb's qs module older than v6.3.2, v6.2.3, v6.1.2, and v6.0.4 is vulnerable to a DoS. A malicious user can send a evil request to cause the web framework crash."
              },
              "properties": {
                "tags": [
                  "qs"
                ],
                "precision": "very-high"
              }
            }]
        }
      },
      "results": [
        {
          "ruleId": "[MEDIUM] CVE-2017-16137",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue."
          },
          "locations": []
        },
        {
          "ruleId": "[HIGH] CVE-2017-1000228",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "nodejs ejs versions older than 2.5.3 is vulnerable to remote code execution due to weak input validation in ejs.renderFile() function."
          },
          "locations": []
        },
        {
          "ruleId": "[MEDIUM] CVE-2017-1000188",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "nodejs ejs version older than 2.5.5 is vulnerable to a Cross-site-scripting in the ejs.renderFile() resulting in code injection."
          },
          "locations": []
        },
        {
          "ruleId": "[MEDIUM] CVE-2017-1000189",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "nodejs ejs version older than 2.5.5 is vulnerable to a denial-of-service due to weak input validation in the ejs.renderFile()."
          },
          "locations": []
        },
        {
          "ruleId": "[MEDIUM] CVE-2017-16119",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Fresh is a module used by the Express.js framework for HTTP response freshness testing. It is vulnerable to a regular expression denial of service when it is passed specially crafted input to parse. This causes the event loop to be blocked causing a denial of service condition."
          },
          "locations": []
        },
        {
          "ruleId": "[MEDIUM] CVE-2017-16138",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "The mime module < 1.4.1, 2.0.1, 2.0.2 is vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input."
          },
          "locations": []
        },
        {
          "ruleId": "[HIGH] CVE-2019-5413",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "An attacker can use the format parameter to inject arbitrary commands in the npm package morgan < 1.9.1."
          },
          "locations": []
        },
        {
          "ruleId": "[MEDIUM] NSWG-ECO-473",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Code Injection Vulnerability in morgan Package."
          },
          "locations": []
        },
        {
          "ruleId": "[HIGH] NSWG-ECO-106",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "negotiator is an HTTP content negotiator for Node.js and is used by many modules and frameworks including Express and Koa.\n\nThe header for \"Accept-Language\", when parsed by negotiator is vulnerable to Regular Expression Denial of Service via a specially crafted string. \n\nTimeline\n\n- April 29th 2016 - Initial report to maintainers\n- April 29th 2016 - Confirm receipt from maintainers\n- May 1st 2016 - Fix confirmed\n- May 5th 2016 - 0.6.1 published with fix\n- June 16th 2016 - Advisory published (delay was to coordinate fixes in upstream frameworks, Koa and Express)."
          },
          "locations": []
        },
        {
          "ruleId": "[MEDIUM] CVE-2016-10539",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "negotiator is an HTTP content negotiator for Node.js and is used by many modules and frameworks including Express and Koa. The header for \"Accept-Language\", when parsed by negotiator 0.6.0 and earlier is vulnerable to Regular Expression Denial of Service via a specially crafted string."
          },
          "locations": []
        },
        {
          "ruleId": "[HIGH] CVE-2017-16082",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "A remote code execution vulnerability was found within the pg module when the remote database or query specifies a specially crafted column name. There are 2 likely scenarios in which one would likely be vulnerable. 1) Executing unsafe, user-supplied sql which contains a malicious column name. 2) Connecting to an untrusted database and executing a query which returns results where any of the column names are malicious."
          },
          "locations": []
        },
        {
          "ruleId": "[MEDIUM] CVE-2017-1000048",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "the web framework using ljharb's qs module older than v6.3.2, v6.2.3, v6.1.2, and v6.0.4 is vulnerable to a DoS. A malicious user can send a evil request to cause the web framework crash."
          },
          "locations": []
        }],
      "columnKind": "utf16CodeUnits"
    }
  ]
}
