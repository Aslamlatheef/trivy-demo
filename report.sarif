{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Trivy: Vulnerability Scanner for Containers",
          "rules": [
            {
              "id": "[MEDIUM] CVE-2019-11358",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package jqueryjs-jquery: prototype pollution in object's prototype leading to denial of service or remote code execution or property injection."
              },
              "fullDescription": {
                "text": "jQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution. If an unsanitized source object contained an enumerable __proto__ property, it could extend the native Object.prototype."
              },
              "defaultConfiguration": null,
              "properties": {
                "tags": [
                  "jquery"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[MEDIUM] CVE-2019-5428",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package jqueryModification of Assumed-Immutable Data (MAID)."
              },
              "fullDescription": {
                "text": "Prototype pollution attack through jQuery $.extend."
              },
              "defaultConfiguration": null,
              "properties": {
                "tags": [
                  "jquery"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[MEDIUM] CVE-2020-11022",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package jqueryjquery: Cross-site scripting due to improper injQuery.htmlPrefilter method."
              },
              "fullDescription": {
                "text": "In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0."
              },
              "defaultConfiguration": null,
              "properties": {
                "tags": [
                  "jquery"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[MEDIUM] CVE-2020-11023",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package jqueryjQuery: passing HTML containing <option> elements to manipulation methods could result in untrusted code execution."
              },
              "fullDescription": {
                "text": "In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing <option> elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0."
              },
              "defaultConfiguration": null,
              "properties": {
                "tags": [
                  "jquery"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[HIGH] CVE-2018-16487",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package lodashlodash: Prototype pollution in utilities function."
              },
              "fullDescription": {
                "text": "A prototype pollution vulnerability was found in lodash <4.17.11 where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype."
              },
              "defaultConfiguration": null,
              "properties": {
                "tags": [
                  "lodash"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[HIGH] CVE-2019-10744",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package lodashnodejs-lodash: prototype pollution in defaultsDeep function leading to modifying properties."
              },
              "fullDescription": {
                "text": "Versions of lodash lower than 4.17.12 are vulnerable to Prototype Pollution. The function defaultsDeep could be tricked into adding or modifying properties of Object.prototype using a constructor payload."
              },
              "defaultConfiguration": null,
              "properties": {
                "tags": [
                  "lodash"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[HIGH] NSWG-ECO-516",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package lodashAllocation of Resources Without Limits or Throttling."
              },
              "fullDescription": {
                "text": "Prototype pollution attack (lodash)."
              },
              "defaultConfiguration": null,
              "properties": {
                "tags": [
                  "lodash"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[MEDIUM] CVE-2019-1010266",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package lodashModerate severity vulnerability that affects lodash."
              },
              "fullDescription": {
                "text": "lodash prior to 4.17.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.17.11."
              },
              "defaultConfiguration": null,
              "properties": {
                "tags": [
                  "lodash"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[LOW] CVE-2018-3721",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package lodashlodash: Prototype pollution in utilities function."
              },
              "fullDescription": {
                "text": "lodash node module before 4.17.5 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects."
              },
              "defaultConfiguration": null,
              "properties": {
                "tags": [
                  "lodash"
                ],
                "precision": "very-high"
              }
            },
            {
              "id": "[LOW] GHSA-p6mc-m468-83gw",
              "name": "container_scanning",
              "shortDescription": {
                "text": "error found in package lodashPrototype Pollution in lodash."
              },
              "fullDescription": {
                "text": "Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.\r\n\r\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances."
              },
              "defaultConfiguration": null,
              "properties": {
                "tags": [
                  "lodash"
                ],
                "precision": "very-high"
              }
            }]
        }
      },
      "results": [
        {
          "ruleId": "[MEDIUM] CVE-2019-11358",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "jQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution. If an unsanitized source object contained an enumerable __proto__ property, it could extend the native Object.prototype."
          },
          "locations": []
        },
        {
          "ruleId": "[MEDIUM] CVE-2019-5428",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "Prototype pollution attack through jQuery $.extend."
          },
          "locations": []
        },
        {
          "ruleId": "[MEDIUM] CVE-2020-11022",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0."
          },
          "locations": []
        },
        {
          "ruleId": "[MEDIUM] CVE-2020-11023",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing <option> elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0."
          },
          "locations": []
        },
        {
          "ruleId": "[HIGH] CVE-2018-16487",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "A prototype pollution vulnerability was found in lodash <4.17.11 where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype."
          },
          "locations": []
        },
        {
          "ruleId": "[HIGH] CVE-2019-10744",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Versions of lodash lower than 4.17.12 are vulnerable to Prototype Pollution. The function defaultsDeep could be tricked into adding or modifying properties of Object.prototype using a constructor payload."
          },
          "locations": []
        },
        {
          "ruleId": "[HIGH] NSWG-ECO-516",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Prototype pollution attack (lodash)."
          },
          "locations": []
        },
        {
          "ruleId": "[MEDIUM] CVE-2019-1010266",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "lodash prior to 4.17.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.17.11."
          },
          "locations": []
        },
        {
          "ruleId": "[LOW] CVE-2018-3721",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "lodash node module before 4.17.5 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects."
          },
          "locations": []
        },
        {
          "ruleId": "[LOW] GHSA-p6mc-m468-83gw",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.\r\n\r\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances."
          },
          "locations": []
        }],
      "columnKind": "utf16CodeUnits"
    }
  ]
}
